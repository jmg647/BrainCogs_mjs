function bootParams = specBootAvgParams( generalParams )

i = 1;
%Cue responses
%Do cue responses or selectivity differ on correct vs. error trials?
%Modified in Alternation trials??
bootParams(i).trigger = "cues";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["leftCue"],...
    ["rightCue"],...
    ["leftCue", "correct"],...
    ["rightCue", "correct"],...
    ["leftCue", "error"],...
    ["rightCue", "error"],...
    ["leftCue", "left"],...
    ["rightCue", "left"]...
    ["leftCue", "right"],...
    ["rightCue", "right"]};

i = i+1;
%Aligned to cueEntry
bootParams(i).trigger = "cueEntry";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["forward"],...
    ["leftCue"],...
    ["rightCue"],...
    ["leftCue", "correct"],...
    ["rightCue", "correct"],...
    ["leftCue", "error"],...
    ["rightCue", "error"],...
    ["leftCue", "left"],...
    ["rightCue", "left"]...
    ["leftCue", "right"],...
    ["rightCue", "right"]...
    ["left"],...
    ["right"],...
    ["priorLeft"],...
    ["priorRight"],...
    ["priorLeft","left"],...
    ["priorLeft","right"],...
    ["priorRight","left"],...
    ["priorRight","right"]};

i = i+1;
%Choice aligned to turnEntry
bootParams(i).trigger = "turnEntry";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["left", "correct"],...
    ["right", "correct"]};

i = i+1;
%Aligned to y-position
bootParams(i).trigger = "cueRegion";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["forward"],...
    ["left"],...
    ["right"],...
    ["left","correct"],...
    ["right","correct"],...
    ["left","error"],...
    ["right","error"],...
    ["leftCue"],...
    ["rightCue"],...
    ["priorCorrect"],...
    ["priorError"],...
    ["priorLeft"],...
    ["priorRight"],...
    ["correct","priorLeft"],...
    ["correct","priorRight"],...
    ["priorCorrect","priorLeft"],...
    ["priorCorrect","priorRight"],...
    ["correct","priorCorrect"],...
    ["correct","priorError"]};

i = i+1;
%Aligned to outcome
bootParams(i).trigger = "outcome";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["correct"],...
    ["error"],...
    ["correct","priorCorrect"],...
    ["correct","priorError"],...
    ["error","priorCorrect"],...
    ["error","priorError"],...
    ["left","correct"],...
    ["right","correct"],...
    ["left","error"],...
    ["right","error"],...
    ["priorLeft"],...
    ["priorRight"],...
    ["correct","congruent"],...
    ["correct","conflict"],...
    ["error","congruent"],...
    ["error","conflict"]};

i = i+1;
%Left and right cues aligned to first cue onset
bootParams(i).trigger = "firstCue";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["leftCue","left"],...
    ["leftCue","right"],...
    ["rightCue","right"],...
    ["rightCue","left"]};

i = i+1;
%Left and right cues aligned to last cue onset
bootParams(i).trigger = "lastCue";
bootParams(i).subtractBaseline = true;
bootParams(i).trialSpec = {...
    ["leftCue","left"],...
    ["leftCue","right"],...
    ["rightCue","right"],...
    ["rightCue","left"]};

%Append general params
fields = string(fieldnames(generalParams)); %Some params specified in params_...m may overwrite bootParams(i)
for j = 1:numel(fields)
    if fields(j)=='subtractBaseline' && ~generalParams.subtractBaseline
        continue
    end
    [bootParams(1:i).(fields{j})] = deal(generalParams.(fields{j}));
end

